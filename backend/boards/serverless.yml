# Welcome to Serverless!
#
service: boards

plugins:
  - serverless-dynamodb-local
  - serverless-offline
custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations
provider:
  name: aws
  runtime: nodejs6.10
  environment:
    DYNAMODB_TABLE: blocky-${opt:stage, self:provider.stage}-${self:service}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:CreateTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}" 

functions:
  auth:
    handler: boards/auth.auth
  create:
    handler: boards/create.create
    events:
      - http:
          path: boards
          method: post
          cors: true
          authorizer: auth
  
  get:
    handler: boards/get.get
    events:
      - http:
          path: boards/{id}
          method: get
          cors: true
          authorizer:
            arn: auth

  list:
    handler: boards/list.list
    events:
      - http:
          path: boards/list
          method: get
          cors: true
          authorizer:
            arn : auth

  update:
    handler: boards/update.update
    events:
      - http:
          path: boards/{id}/update
          method: put
          cors: true
          authorizer:
            arn: auth

resources:
  Resources:
    BoardsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: owner
            AttributeType: S
        KeySchema:
          -
            AttributeName: owner
            KeyType: HASH
          -
            AttributeName: id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}